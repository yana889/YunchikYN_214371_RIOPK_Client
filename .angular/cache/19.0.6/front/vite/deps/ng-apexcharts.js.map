{
  "version": 3,
  "sources": ["../../../../../../node_modules/ng-apexcharts/fesm2022/ng-apexcharts.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { input, output, signal, viewChild, inject, NgZone, PLATFORM_ID, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { asapScheduler } from 'rxjs';\nconst _c0 = [\"chart\"];\nclass ChartComponent {\n  constructor() {\n    this.chart = input();\n    this.annotations = input();\n    this.colors = input();\n    this.dataLabels = input();\n    this.series = input();\n    this.stroke = input();\n    this.labels = input();\n    this.legend = input();\n    this.markers = input();\n    this.noData = input();\n    this.fill = input();\n    this.tooltip = input();\n    this.plotOptions = input();\n    this.responsive = input();\n    this.xaxis = input();\n    this.yaxis = input();\n    this.forecastDataPoints = input();\n    this.grid = input();\n    this.states = input();\n    this.title = input();\n    this.subtitle = input();\n    this.theme = input();\n    this.autoUpdateSeries = input(true);\n    this.chartReady = output();\n    // If consumers need to capture the `chartInstance` for use, consumers\n    // can access the component instance through `viewChild` and use `computed`\n    // or `effect` on `component.chartInstance()` to monitor its changes and\n    // recompute effects or computations whenever `chartInstance` is updated.\n    this.chartInstance = signal(null);\n    this.chartElement = viewChild.required(\"chart\");\n    this.ngZone = inject(NgZone);\n    this.isBrowser = isPlatformBrowser(inject(PLATFORM_ID));\n  }\n  ngOnChanges(changes) {\n    if (!this.isBrowser) return;\n    this.ngZone.runOutsideAngular(() => {\n      asapScheduler.schedule(() => this.hydrate(changes));\n    });\n  }\n  ngOnDestroy() {\n    this.destroy();\n  }\n  hydrate(changes) {\n    const shouldUpdateSeries = this.autoUpdateSeries() && Object.keys(changes).filter(c => c !== \"series\").length === 0;\n    if (shouldUpdateSeries) {\n      this.updateSeries(this.series(), true);\n      return;\n    }\n    this.createElement();\n  }\n  async createElement() {\n    const {\n      default: ApexCharts\n    } = await import('apexcharts');\n    window.ApexCharts ||= ApexCharts;\n    const options = {};\n    const properties = [\"annotations\", \"chart\", \"colors\", \"dataLabels\", \"series\", \"stroke\", \"labels\", \"legend\", \"fill\", \"tooltip\", \"plotOptions\", \"responsive\", \"markers\", \"noData\", \"xaxis\", \"yaxis\", \"forecastDataPoints\", \"grid\", \"states\", \"title\", \"subtitle\", \"theme\"];\n    properties.forEach(property => {\n      const value = this[property]();\n      if (value) {\n        options[property] = value;\n      }\n    });\n    this.destroy();\n    const chartInstance = this.ngZone.runOutsideAngular(() => new ApexCharts(this.chartElement().nativeElement, options));\n    this.chartInstance.set(chartInstance);\n    this.render();\n    this.chartReady.emit({\n      chartObj: chartInstance\n    });\n  }\n  render() {\n    return this.ngZone.runOutsideAngular(() => this.chartInstance()?.render());\n  }\n  updateOptions(options, redrawPaths, animate, updateSyncedCharts) {\n    return this.ngZone.runOutsideAngular(() => this.chartInstance()?.updateOptions(options, redrawPaths, animate, updateSyncedCharts));\n  }\n  updateSeries(newSeries, animate) {\n    return this.ngZone.runOutsideAngular(() => this.chartInstance()?.updateSeries(newSeries, animate));\n  }\n  appendSeries(newSeries, animate) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.appendSeries(newSeries, animate));\n  }\n  appendData(newData) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.appendData(newData));\n  }\n  highlightSeries(seriesName) {\n    return this.ngZone.runOutsideAngular(() => this.chartInstance()?.highlightSeries(seriesName));\n  }\n  toggleSeries(seriesName) {\n    return this.ngZone.runOutsideAngular(() => this.chartInstance()?.toggleSeries(seriesName));\n  }\n  showSeries(seriesName) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.showSeries(seriesName));\n  }\n  hideSeries(seriesName) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.hideSeries(seriesName));\n  }\n  resetSeries() {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.resetSeries());\n  }\n  zoomX(min, max) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.zoomX(min, max));\n  }\n  toggleDataPointSelection(seriesIndex, dataPointIndex) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.toggleDataPointSelection(seriesIndex, dataPointIndex));\n  }\n  destroy() {\n    this.chartInstance()?.destroy();\n    this.chartInstance.set(null);\n  }\n  setLocale(localeName) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.setLocale(localeName));\n  }\n  paper() {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.paper());\n  }\n  addXaxisAnnotation(options, pushToMemory, context) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.addXaxisAnnotation(options, pushToMemory, context));\n  }\n  addYaxisAnnotation(options, pushToMemory, context) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.addYaxisAnnotation(options, pushToMemory, context));\n  }\n  addPointAnnotation(options, pushToMemory, context) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.addPointAnnotation(options, pushToMemory, context));\n  }\n  removeAnnotation(id, options) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.removeAnnotation(id, options));\n  }\n  clearAnnotations(options) {\n    this.ngZone.runOutsideAngular(() => this.chartInstance()?.clearAnnotations(options));\n  }\n  dataURI(options) {\n    return this.chartInstance()?.dataURI(options);\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function ChartComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ChartComponent)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ChartComponent,\n      selectors: [[\"apx-chart\"]],\n      viewQuery: function ChartComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuerySignal(ctx.chartElement, _c0, 5);\n        }\n        if (rf & 2) {\n          i0.ɵɵqueryAdvance();\n        }\n      },\n      inputs: {\n        chart: [1, \"chart\"],\n        annotations: [1, \"annotations\"],\n        colors: [1, \"colors\"],\n        dataLabels: [1, \"dataLabels\"],\n        series: [1, \"series\"],\n        stroke: [1, \"stroke\"],\n        labels: [1, \"labels\"],\n        legend: [1, \"legend\"],\n        markers: [1, \"markers\"],\n        noData: [1, \"noData\"],\n        fill: [1, \"fill\"],\n        tooltip: [1, \"tooltip\"],\n        plotOptions: [1, \"plotOptions\"],\n        responsive: [1, \"responsive\"],\n        xaxis: [1, \"xaxis\"],\n        yaxis: [1, \"yaxis\"],\n        forecastDataPoints: [1, \"forecastDataPoints\"],\n        grid: [1, \"grid\"],\n        states: [1, \"states\"],\n        title: [1, \"title\"],\n        subtitle: [1, \"subtitle\"],\n        theme: [1, \"theme\"],\n        autoUpdateSeries: [1, \"autoUpdateSeries\"]\n      },\n      outputs: {\n        chartReady: \"chartReady\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 2,\n      vars: 0,\n      consts: [[\"chart\", \"\"]],\n      template: function ChartComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", null, 0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartComponent, [{\n    type: Component,\n    args: [{\n      selector: \"apx-chart\",\n      template: `<div #chart></div>`,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true\n    }]\n  }], null, null);\n})();\nconst declarations = [ChartComponent];\nclass NgApexchartsModule {\n  /** @nocollapse */static {\n    this.ɵfac = function NgApexchartsModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgApexchartsModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgApexchartsModule,\n      imports: [ChartComponent],\n      exports: [ChartComponent]\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgApexchartsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [declarations],\n      exports: [declarations]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ng-apexcharts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ChartComponent, NgApexchartsModule };\n"],
  "mappings": "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",
  "names": []
}
